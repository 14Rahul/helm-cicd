deployment:
  replicaCount: 1
  image:
    repository: 532968567499.dkr.ecr.ap-south-1.amazonaws.com/cicd-test
    tag: "latest"
    pullPolicy: Always
  containerPort: 80
  serviceAccountName: 
  command: []  # ["python", "app.py"]
  volumeMounts:
  - name: nginx-volume  # Should be in format <DeploymentName-volume>
    mountPath: /mnt/efs/
  volumes: 
  - name: nginx-volume  # Should be in format <DeploymentName-volume>
    claimName: nginx-claim #  Should be in format <DeploymentName-claim>
  nodeSelector: {role: workers}
  affinity: {}
  tolerations: [
  #  - key: "node-role"
  #    operator: "Equal"
  #    value: "worker"
  #    effect: "NoSchedule"
  ]
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
    requests:
      cpu: "100m"
      memory: "250Mi"
  extraEnv:
#    PROD_ENV_FLAG : "0"
  securityContext:
#    runAsUser: 1000
#    runAsGroup: 1000
#    fsGroup: 2000
  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 15
    periodSeconds: 5
  readinessProbe:
#    httpGet:
#      path: /readyz
#      port: http
#    initialDelaySeconds: 5
#    periodSeconds: 10
  preStop:
#    command: #["bash", "-c", "sleep 5; /app/pronotes-py-server/scripts/prestop.sh > /proc/1/fd/1 2>&1"]

persistence:
  enabled: true
  storageSize: 5Gi
  accessMode: ReadWriteMany
  reclaimPolicy: Retain
  storageClass: oh-efs-sc
  csiDriver: efs.csi.aws.com
  volumeHandle: fs-0fd9965de6e535918:/


services:
  enabled: true
  servicePort: 80
  list:
  - name: nginx
    type: NodePort
    port: 80
#  - name: service2
#    type: NodePort
#    port: 8081
#  - name: service3
#    type: LoadBalancer
#    port: 8082

ingress:
  InternalIngress:
    enabled: false # Set to True to create internal ALB
    groupname: internalapisdev # options are internalapis, apps-prod, apps-dev, apps-qa, apps-staging
    listenerport: "\'[{\"HTTPS\": 80}]\'"  # Remove if port is not required
    healthcheckpath: / # Add the Healthcheck path of application
    subnets: subnet-0deffc104e031ba1e, subnet-01f783605e41b71ba, subnet-08db2015849f45d05 # Mention the subnets for the ingress
    rules:
      - http:
          paths:
          - path: / # Add the application path of application
            pathType: Prefix
            backend:
              service:
                name: nginx # Name of the service
                port:
                  number: 80
  ExternalIngress:
    enabled: true # Set to True to create external ALB
    groupname: internalapisdev # options are internalapis, apps-prod, apps-dev, apps-qa, apps-staging
    listenerport: "\'[{\"HTTP\": 80}]\'"  # Remove if port is not required
    healthcheckpath: / # Add the Healthcheck path of application
    subnets: subnet-7fa05404, subnet-ac0176c4 # Mention the subnets for the ingress
    rules:
      - http:
          paths:
          - path: / # Add the application path of application
            pathType: Prefix
            backend:
              service:
                name: nginx # Name of the service
                port:
                  number: 80

# Confirmation from mahesh required
autoscaling:
  enabled: false
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: redis
    metadata:
      address: bifrost-dev-001.ljl3mh.0001.use2.cache.amazonaws.com:6379
      password: ""
      listName: active_porter_requests
      listLength: "50"
      databaseIndex: "1"

secret:
  enabled: false

configMap:
  enabled: false
  data:
    key1: value1
    key2: value2
    key3: value3
